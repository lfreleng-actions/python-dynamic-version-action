---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# python-dynamic-version-action
name: '🐍 Python Project Dynamic Versioning'
description: 'Checks dynamic versioning setup in the pyproject.toml file'

inputs:
  # Optional
  path_prefix:
    description: 'Directory location containing project code'
    required: false
    default: '.'

outputs:
  dynamic_version:
    description: 'Set true when dynamic versioning configured'
    value: "${{ steps.parse.outputs.dynamic_version }}"

runs:
  using: 'composite'
  steps:
    - name: 'Verify action/environment'
      shell: bash
      run: |
        # Verify action/environment
        if [ ! -d "${{ inputs.path_prefix }}" ]; then
          echo "Error: invalid path/prefix to project directory ❌"; exit 1
        fi

    - name: 'Check for required pyproject.toml file'
      # yamllint disable-line rule:line-length
      uses: lfreleng-actions/path-check-action@aa7dabfa92e50e31a0f091dd3e2741692e8dde07 # v0.1.5
      with:
        path: "${{ inputs.path_prefix }}/pyproject.toml"

    - id: parse
      name: 'Check for dynamic project versioning'
      shell: bash
      # yamllint disable rule:line-length
      run: |
        # Check for dynamic project versioning

        # See: https://regex101.com/r/XneQ1u/1
        if awk '/^\[project\]/ {in_project=1; next} /^\[/ {in_project=0} in_project' \
          "${{ inputs.path_prefix }}/pyproject.toml" \
          | grep -Eq "^[[:space:]]*dynamic[[:space:]]*=[[:space:]]*\[[^]]*['\"]version['\"][^]]*\]"; then
          echo 'Dynamic versioning configured ✅'
          echo "dynamic_version=true" >> "$GITHUB_ENV"
          echo "dynamic_version=true" >> "$GITHUB_OUTPUT"
        else
          echo 'Dynamic versioning is NOT configured 💬'
          echo "dynamic_version=false" >> "$GITHUB_ENV"
          echo "dynamic_version=false" >> "$GITHUB_OUTPUT"
        fi
